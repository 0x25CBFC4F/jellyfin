#!/bin/bash
set -e

NAME=jellyfin
CONF_FILE=/etc/${NAME}.conf
DEFAULT_FILE=/etc/default/${NAME}

# Source Jellyfin default configuration
if [[ -f $DEFAULT_FILE ]]; then
  . $DEFAULT_FILE
fi

# Source Jellyfin user configuration overrides
if [[ -f $CONF_FILE ]]; then
  . $CONF_FILE
fi

# Data directory where Emby database, cache and logs are stored
PROGRAMDATA=${JELLYFIN_DATA-/var/lib/$NAME}

# In case this system is running systemd, we make systemd reload the unit files
# to pick up changes.
if [[ -d /run/systemd/system ]] ; then
  systemctl --system daemon-reload >/dev/null || true
fi

case "$1" in
  purge)
    echo PURGE | debconf-communicate $NAME > /dev/null 2>&1 || true

    if [[ -x "/etc/init.d/jellyfin" ]] || [[ -e "/etc/init/jellyfin.connf" ]]; then
      update-rc.d jellyfin remove >/dev/null 2>&1 || true
    fi

    if [[ -x "/usr/bin/deb-systemd-helper" ]]; then
      deb-systemd-helper purge jellyfin.service >/dev/null
      deb-systemd-helper unmask jellyfin.service >/dev/null
    fi

    userdel jellyfin > /dev/null 2>&1 || true
    delgroup --quiet jellyfin > /dev/null 2>&1 || true
    if [[ -d $PROGRAMDATA ]]; then
      rm -rf $PROGRAMDATA
    fi
    [[ -f /usr/bin/jellyfin ]] && rm /usr/bin/jellyfin
    [[ -f /etc/sudoers.d/jellyfin-sudoers ]] && rm /etc/sudoers.d/jellyfin-sudoers
    [[ -d /var/lib/jellyfin ]] && rm -rf /var/lib/jellyfin
    ;;
  remove)
    if [[ -x "/usr/bin/deb-systemd-helper" ]]; then
      deb-systemd-helper mask jellyfin.service >/dev/null
    fi
    ;;
  upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;
  *)
    echo "postrm called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

#DEBHELPER#

exit 0
